{"version":3,"file":"static/js/901.8abca278.chunk.js","mappings":"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","sources":["components/CastDetails/CastDetails.styled.js","components/CastDetails/CastDetails.jsx","services/api.services.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled('ul')`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: 400px;\n  color: Cornsilk;\n`;\n\nexport const ActorName = styled('p')`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.12;\n  letter-spacing: 0.03em;\n`;\n\nexport const ActorRole = styled('p')`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.12;\n  letter-spacing: 0.03em;\n`;\n\nexport const NoCast = styled('p')`\n  margin-top: 20px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.12;\n  letter-spacing: 0.03em;\n  color: Cornsilk;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../services/api.services';\nimport { ActorName, ActorRole, CastList, NoCast } from './CastDetails.styled';\n\nfunction CastDetails() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(({ cast_id, character, original_name, profile_path }) => (\n            <li key={cast_id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : defaultImg\n                }\n                alt=\"\"\n              />\n              <ActorName>{original_name}</ActorName>\n              <ActorRole>{character}</ActorRole>\n            </li>\n          ))}\n        </CastList>\n      ) : (\n        <NoCast>Sorry no information about cast.</NoCast>\n      )}\n    </>\n  );\n}\n\nexport default CastDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2476d1779a41c69192ee5828763b3188';\n\nexport const getTrandingToday = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Network response was not ok.');\n  });\n};\n\nexport const searchMovies = (query, value) => {\n    const queryParams = new URLSearchParams({\n      api_key: API_KEY,\n      query: query\n    });\n  \n    return fetch(`${BASE_URL}/search/movie?${queryParams.toString()}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  };\n\n  export const getMovieById = (movieId) => {\n \n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  };\n\n\n  export const getCast = (movieId) => {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  };\n\n  \n  export const getReview = (movieId) => {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  }","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["CastList","styled","ActorName","ActorRole","NoCast","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCast","data","console","error","length","map","cast_id","character","original_name","profile_path","src","alt","BASE_URL","API_KEY","getTrandingToday","fetch","then","response","ok","json","Error","searchMovies","query","value","queryParams","URLSearchParams","api_key","toString","getMovieById","getReview","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}