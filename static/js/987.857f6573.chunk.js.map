{"version":3,"file":"static/js/987.857f6573.chunk.js","mappings":"uNAGaA,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2GAOLE,GAAOF,EAAAA,EAAAA,GAAO,KAAPA,CAAH,gG,SCSjB,MAfA,YAAgC,IAAXG,EAAU,EAAVA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACL,EAAD,WACE,SAACH,EAAD,CAAOS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAjD,SACGG,EAAMK,SAFAL,EAAME,GADF,KAStB,C,qHCfYI,GAAeb,E,OAAAA,GAAO,KAAPA,CAAH,6Q,SCmBzB,MAhBA,WACE,OAA4Cc,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAI,OAAIJ,EAAkBI,EAAKC,QAA3B,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,kCAAmCA,EAArD,GACf,GAAE,KAED,iCACE,SAACV,EAAD,8BACA,SAACY,EAAA,EAAD,CAAWtB,OAAQY,MAGxB,C,uJCnBD,IAAMW,EAAW,+BACXC,EAAU,mCAEHT,EAAmB,WAC9B,OAAOU,MAAM,GAAD,OAAIF,EAAJ,uCAA2CC,IAAWR,MAAK,SAAAU,GACrE,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,+BACjB,GACF,EAEYC,EAAe,SAACC,EAAOC,GAChC,IAAMC,EAAc,IAAIC,gBAAgB,CACtCC,QAASX,EACTO,MAAOA,IAGT,OAAON,MAAM,GAAD,OAAIF,EAAJ,yBAA6BU,EAAYG,aAClDpB,MAAK,SAAAU,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,+BACjB,GACJ,EAEYQ,EAAe,SAACC,GAE3B,OAAOb,MAAM,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,oBAAyCd,IAClDR,MAAK,SAAAU,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,+BACjB,GACJ,EAGYU,EAAU,SAACD,GACtB,OAAOb,MAAM,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,4BAAiDd,IAC1DR,MAAK,SAAAU,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,+BACjB,GACJ,EAGYW,EAAY,SAACF,GACxB,OAAOb,MAAM,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,4BAAiDd,IAC1DR,MAAK,SAAAU,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,+BACjB,GACJ,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Homepage/Homepage.styled.js","pages/Homepage.jsx","services/api.services.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Films = styled(Link)`\n  color: Cornsilk;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 1.36;\n`;\n\nexport const List = styled('li')`\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Films, List } from './MovieList.styled';\n\nfunction MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(movie => (\n        <List key={movie.id}>\n          <Films to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Films>\n        </List>\n      ))}\n    </>\n  );\n}\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const TandingTitle = styled('h1')`\ncolor: #fff;\nfont-weight: 900;\nfont-size: 40px;\nline-height: 1.36;\nmargin-left: auto;\nmargin-right: auto;\nmax-width: 696px;\ntext-align: center;\nletter-spacing: .06em;\ntext-transform: uppercase;\nmargin-bottom: 30px;\nmargin-top: 20px;\n`;\n","import MovieList from 'components/MovieList/MovieList';\nimport { React, useState, useEffect } from 'react';\nimport { getTrandingToday } from '../services/api.services';\nimport { TandingTitle } from '../components/Homepage/Homepage.styled';\n\nfunction Homepage() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getTrandingToday()\n      .then(data => setTrendingMovies(data.results))\n      .catch(error => console.error('Error fetching trending movies:', error));\n  }, []);\n  return (\n    <>\n      <TandingTitle>Trending today</TandingTitle>\n      <MovieList movies={trendingMovies} />\n    </>\n  );\n}\n\nexport default Homepage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2476d1779a41c69192ee5828763b3188';\n\nexport const getTrandingToday = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Network response was not ok.');\n  });\n};\n\nexport const searchMovies = (query, value) => {\n    const queryParams = new URLSearchParams({\n      api_key: API_KEY,\n      query: query\n    });\n  \n    return fetch(`${BASE_URL}/search/movie?${queryParams.toString()}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  };\n\n  export const getMovieById = (movieId) => {\n \n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  };\n\n\n  export const getCast = (movieId) => {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  };\n\n  \n  export const getReview = (movieId) => {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok.');\n      });\n  }"],"names":["Films","styled","Link","List","movies","location","useLocation","map","movie","to","id","state","from","title","TandingTitle","useState","trendingMovies","setTrendingMovies","useEffect","getTrandingToday","then","data","results","catch","error","console","MovieList","BASE_URL","API_KEY","fetch","response","ok","json","Error","searchMovies","query","value","queryParams","URLSearchParams","api_key","toString","getMovieById","movieId","getCast","getReview"],"sourceRoot":""}